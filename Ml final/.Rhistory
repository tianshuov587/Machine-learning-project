gau<-as.undirected(ga)
plot(gau)
Atl = c(0, 0, 7, 0, 8, 0, 8.5, 0)
Bos = c(0, 0, 9.8, 0, 0, 0, 2, 0)
Chi = c(7, 9.8, 0, 10, 9.7, 0, 8, 0)
Den = c(14, 0, 10, 0, 8, 10, 0, 12)
Dal = c(8, 0, 9.7, 8, 0, 14, 0, 17)
LA = c(0, 0, 0, 10, 14, 0, 0, 4)
NY = c(8.5, 2, 8, 0, 0, 0, 0, 0)
SF = c(0, 0, 0, 12, 17, 4, 0, 0)
MA = rbind(Atl,Bos,Chi,Den,Dal,LA,NY,SF)
ga<-graph_from_adjacency_matrix(MA)
plot(ga)
gau<-as.undirected(ga)
plot(gau)
? as.undirected
gau
E(gau)$weight<-c(7,9.8,14,10,8,9.7,8,10,14,8.5,2,8,12,17,4)
T2 = mst(gau) # MST defaults to Prim algorithm
T2
plot(T2)
distances(gau)
?shortest_paths
? mst
T2 = mst(gau,algorithm = "dijkstra") # MST defaults to Prim algorithm
T2 = mst(gau) # MST defaults to Prim algorithm
plot(T2)
tem <- data.frame("x" = NULL, "y" = NULL)
View(tem)
tem <- data.frame("x" = 0, "y" = 0)
View(tem)
tem$x<-c(1:12)
tem$y<-c(12,10,14,16,18,21,33,28,35,40,39,41)
c(1:12)
tem[,1]
tem[,1]<-c(1:12)
cbind(tem,c(1:12))
tem <- data.frame()
cbind(tem,x=c(1:12))
cbind(tem,c(1:12))
tem <- data.frame(x,y)
tem <- data.frame(x=NULL,y=NULL)
cbind(tem,c(1:12))
tem <- data.frame("x"=NULL,"y"=NULL)
cbind(tem,c(1:12))
tem <- data.frame("x"=0,"y"=0)
cbind(tem,c(1:12))
cbind(tem,c(12,10,14,16,18,21,33,28,35,40,39,41))
tem<-cbind(tem,c(1:12))
tem<-cbind(tem,c(12,10,14,16,18,21,33,28,35,40,39,41))
View(tem)
tem<-tem[,c(3,4)]
View(tem)
colnames(tem)<-c("x","y")
View(tem)
?lm
q2<-lm(y~x,data = tem)
q2<-lm(y~x,data = tem)
plot(q2)
qplot(q2)
library(ggplot2)
tem%>%
ggplot2(aes(x = x, y = y))+
geom_point()
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_line()
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_smooth(method=lm)
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
?geom_smooth
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_smooth(method=lm, level=0.9)
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_smooth(method=lm, level=0.5)
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_smooth(method=lm, level=0.9)
print(q2)
residuals(q2)
summary(q2)
print(q2)
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_smooth(method=lm, level=0.9)
library(dplyr)
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_smooth(method=lm, level=0.9)
library(ggplot2)
tem%>%
ggplot(aes(x = x, y = y))+
geom_point()+
geom_smooth(method=lm, level=0.9)
residuals(q2)
summary(q2)
pre<-predict(q2,interval = 'confidence', level = 0.9)
pre
residuals(q2)
constr <- matrix(c(1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1), ncol=4,
byrow = TRUE)
View(constr)
constr <- matrix(c(1, 0, 0, 0, 0,
0, 1, 1, 0, 0,
0, 0, 0, 1, 1,
0, 1, 0, 0, 0,
0, 0, 1, 0, 1,
0, 0, 1, 1, 0), ncol=4,
byrow = TRUE)
View(constr)
constr <- matrix(c(1, 0, 0, 0, 0,
0, 1, 1, 0, 0,
0, 0, 0, 1, 1,
0, 1, 0, 0, 0,
0, 0, 1, 0, 1,
0, 0, 1, 1, 0), ncol=5,
byrow = TRUE)
View(constr)
constr <- matrix(c(1, 0, 0, 0, 0,
0, 1, 1, 0, 0,
0, 0, 0, 1, 1,
0, 1, 0, 0, 1,
0, 0, 1, 0, 1,
0, 0, 1, 1, 0), ncol=5,
byrow = TRUE)
View(constr)
constr.dir <-c("<=","<=","<=","<=","<=","<=")
rhs <-c(30, 60, 40, 60, 70, 60)
mflow.sol <-lp("max",obj.fun,constr,constr.dir,rhs)
mflow.sol
library(lpSolve)
mflow.sol <-lp("max",obj.fun,constr,constr.dir,rhs)
obj.fun<-c(1, 1, 1, 1)
obj.fun<-c(1, 1, 1, 1)
constr <- matrix(c(1, 0, 0, 0, 0,
0, 1, 1, 0, 0,
0, 0, 0, 1, 1,
0, 1, 0, 0, 1,
0, 0, 1, 0, 1,
0, 0, 1, 1, 0), ncol=5,
byrow = TRUE)
constr.dir <-c("<=","<=","<=","<=","<=","<=")
rhs <-c(30, 60, 40, 60, 70, 60)
mflow.sol <-lp("max",obj.fun,constr,constr.dir,rhs)
mflow.sol
mflow.sol$solution
View(constr)
obj.fun<-c(1, 1, 1, 1, 1)
constr <- matrix(c(1, 0, 0, 0, 0,
0, 1, 1, 0, 0,
0, 0, 0, 1, 1,
0, 1, 0, 0, 1,
0, 0, 1, 0, 1,
0, 0, 1, 1, 0), ncol=5,
byrow = TRUE)
constr.dir <-c("<=","<=","<=","<=","<=","<=")
rhs <-c(30, 60, 40, 60, 70, 60)
mflow.sol <-lp("max",obj.fun,constr,constr.dir,rhs)
mflow.sol
mflow.sol$solution
install.packages("deSolve")
library(deSolve)
parameters <- c(mu = 1, lamda = 0.1)
initial_state <- c(P0=1 , p1 = 0)
parameters <- c(mu = 1, lambda = 0.1)
popmodel <- function(t, initial_state, parameters){
with(as.list(c(initial_state, parameters)), {
#rate of change
dP0 <- -mu*p0+lambda*p1
dp1 <- mu*p0 - lambda*p1
list(dP0,dp1)
})
}
times <- seq(0, 10 , by = .01)
out <- rk4(initial_state, times, popmodel, parameters)
initial_state <- c(P0=1 , p1 = 0)
out <- rk4(initial_state, times, popmodel, parameters)
parameters <- c(mu = 1, lambda = 0.1)
initial_state <- c(P0=1 , p1 = 0)
popmodel <- function(t, initial_state, parameters){
with(as.list(c(initial_state, parameters)), {
#rate of change
dP0 <- -mu*p0+lambda*p1
dp1 <- mu*p0 - lambda*p1
list(dP0,dp1)
})
}
plot(out)
out <- rk4(initial_state, times, popmodel, parameters)
initial_state
initial_state$P0
out <- rk4(initial_state, times, popmodel, parameters)
initial_state <- c(P0=1 )
out <- rk4(initial_state, times, popmodel, parameters)
library(deSolve)
parameters <- c(mu = 1, lambda = 0.1)
initial_state <- c(p0=1 , p1 = 0)
popmodel <- function(t, initial_state, parameters){
with(as.list(c(initial_state, parameters)), {
#rate of change
dP0 <- -mu*p0+lambda*p1
dp1 <- mu*p0 - lambda*p1
list(dP0,dp1)
})
}
times <- seq(0, 10 , by = .01)
out <- rk4(initial_state, times, popmodel, parameters)
library(deSolve)
parameters <- c(mu = 1, lambda = 0.1)
initial_state <- c(p0=1 , p1 = 0)
popmodel <- function(t, initial_state, parameters){
with(as.list(c(initial_state, parameters)), {
#rate of change
dp0 <- -mu*p0+lambda*p1
dp1 <- mu*p0 - lambda*p1
list(dp0,dp1)
})
}
times <- seq(0, 10 , by = .01)
out <- rk4(initial_state, times, popmodel, parameters)
out <-as.data.frame(rk4(initial_state, times, popmodel, parameters))
initial_state$p1
out <- rk4(initial_state, times, popmodel, parameters)
library(deSolve)
parameters <- c(mu = 1, lambda = 0.1)
initial_state <- c(p0=1 , p1 = 0)
popmodel <- function(t, initial_state, parameters){
with(as.list(c(initial_state, parameters)), {
#rate of change
dp0 <- -mu*p0+lambda*p1
dp1 <- mu*p0 - lambda*p1
return(list(c(dp0,dp1)))
})
}
times <- seq(0, 10 , by = .01)
out <- rk4(initial_state, times, popmodel, parameters)
View(out)
#mu = 1, lambda = 1
parameters <- c(mu = 1, lambda = 1)
out2 <- rk4(initial_state, times, popmodel, parameters)
#mu = 0.1, lambda = 1
parameters <- c(mu = 0.1, lambda = 1)
out3 <- rk4(initial_state, times, popmodel, parameters)
plot(out)
plot(out)
plot(out2)
plot(out3)
library(ggplot2)
tem<-as.data.frame(out,out2,out3)
View(tem)
tem<-as.data.frame(out)
cbind(tem,as.data.frame(out2))
tem<-cbind(tem,as.data.frame(out2))
tem<-cbind(tem,as.data.frame(out3))
View(tem)
colnames(tem)
tem$p0
colnames(tem)<-c(t1,p0_1,p1_1,t2,p0_2,p1_2,t3,p0_3,p1_3)
colnames(tem)<-c("t1","p0_1","p1_1","t2","p0_2","p1_2","t3","p0_3","p1_3")
View(tem)
tem->
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ))+
geom_smooth(aes(x = t1, y = p1_1 ))+
geom_smooth(aes(x = t2, y = p0_2 ))+
geom_smooth(aes(x = t2, y = p1_2 ))+
geom_smooth(aes(x = t3, y = p0_3 ))+
geom_smooth(aes(x = t3, y = p1_3 ))
tem->
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ))+
geom_smooth(aes(x = t1, y = p1_1 ))+
geom_smooth(aes(x = t2, y = p0_2 ))+
geom_smooth(aes(x = t2, y = p1_2 ))+
geom_smooth(aes(x = t3, y = p0_3 ))+
geom_smooth(aes(x = t3, y = p1_3 ))
tem->
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ))+
geom_smooth(aes(x = t1, y = tem$p1_1 ))+
geom_smooth(aes(x = t2, y = p0_2 ))+
geom_smooth(aes(x = t2, y = p1_2 ))+
geom_smooth(aes(x = t3, y = p0_3 ))+
geom_smooth(aes(x = t3, y = p1_3 ))
tem->
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ))+
geom_smooth(aes(x = t1, y = p1_1 ))
tem->
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ))
tem->
ggplot()%>%
geom_smooth(aes(x = t1, y = p0_1 ))+
geom_smooth(aes(x = t1, y = p1_1 ))+
geom_smooth(aes(x = t2, y = p0_2 ))+
geom_smooth(aes(x = t2, y = p1_2 ))+
geom_smooth(aes(x = t3, y = p0_3 ))+
geom_smooth(aes(x = t3, y = p1_3 ))
tem%>%
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ))+
geom_smooth(aes(x = t1, y = p1_1 ))+
geom_smooth(aes(x = t2, y = p0_2 ))+
geom_smooth(aes(x = t2, y = p1_2 ))+
geom_smooth(aes(x = t3, y = p0_3 ))+
geom_smooth(aes(x = t3, y = p1_3 ))
library(dplyr)
tem%>%
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ))+
geom_smooth(aes(x = t1, y = p1_1 ))+
geom_smooth(aes(x = t2, y = p0_2 ))+
geom_smooth(aes(x = t2, y = p1_2 ))+
geom_smooth(aes(x = t3, y = p0_3 ))+
geom_smooth(aes(x = t3, y = p1_3 ))
tem%>%
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ,color = "red"))+
geom_smooth(aes(x = t1, y = p1_1 ,color = "red"))+
geom_smooth(aes(x = t2, y = p0_2 ,color = "green"))+
geom_smooth(aes(x = t2, y = p1_2 ,color = "green"))+
geom_smooth(aes(x = t3, y = p0_3 ,color = "blue" ))+
geom_smooth(aes(x = t3, y = p1_3 ,color = "blue"))
tem%>%
ggplot()+
geom_smooth(aes(x = t1, y = p0_1 ,color = "out"))+
geom_smooth(aes(x = t1, y = p1_1 ,color = "out"))+
geom_smooth(aes(x = t2, y = p0_2 ,color = "out2"))+
geom_smooth(aes(x = t2, y = p1_2 ,color = "out2"))+
geom_smooth(aes(x = t3, y = p0_3 ,color = "out3" ))+
geom_smooth(aes(x = t3, y = p1_3 ,color = "out3"))
ME = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
ME = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
NH = c(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
VT = c(0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0)
MA = c(0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0)
RI = c(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0)
CT = c(0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0)
NY = c(0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0)
NJ = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
DE = c(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0)
PA = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1)
MD = c(0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0)
WV = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1)
OH = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0)
ga <-graph_from_adjacency_matrix(MA)
plot(ga)
gau <-as.undirected(ga)
plot(gau)
library(igraph)
library(optrees)
ME = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
NH = c(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
VT = c(0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0)
MA = c(0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0)
RI = c(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0)
CT = c(0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0)
NY = c(0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0)
NJ = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
DE = c(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0)
PA = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1)
MD = c(0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0)
WV = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1)
OH = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0)
ga <-graph_from_adjacency_matrix(MA)
plot(ga)
gau <-as.undirected(ga)
plot(gau)
ME = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
NH = c(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
VT = c(0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0)
MA = c(0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0)
RI = c(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0)
CT = c(0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0)
NY = c(0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0)
NJ = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
DE = c(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0)
PA = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1)
MD = c(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0)
WV = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1)
OH = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0)
ga <-graph_from_adjacency_matrix(MA)
total = rbind(ME,NH,VT,MA,RI,CT,NY,NJ,DE,PA,MD,WV,OH)
ga <-graph_from_adjacency_matrix(total)
plot(ga)
gau <-as.undirected(ga)
plot(gau)
plot(gau)
plot(gau)
plot(gau)
plot(gau)
plot(gau)
plot(gau)
degree(gau)
?directed_graph()
?graph_from_adjacency_matrix()
ga <-graph_from_adjacency_matrix(total, mode = "directed")
plot(ga)
gau <-as.undirected(ga)
plot(gau)
degree(gau)
?graph_from_adjacency_matrix()
ga <-graph_from_adjacency_matrix(total, mode = directed)
ME = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
NH = c(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
VT = c(0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0)
MA = c(0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0)
RI = c(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0)
CT = c(0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0)
NY = c(0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0)
NJ = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
DE = c(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0)
PA = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1)
MD = c(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0)
WV = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1)
OH = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0)
total = rbind(ME,NH,VT,MA,RI,CT,NY,NJ,DE,PA,MD,WV,OH)
ga <-graph_from_adjacency_matrix(total, mode="directed")
plot(ga)
degree(ga)
gau <-as.directed(ga)
plot(gau)
plot(gau,edge.label = graph_attr(gau,'weight'))
gau <-as.directed(ga , mode = "mutual")
plot(gau)
gau <-as.directed(ga , mode = "abitrary")
?as.directed()
gau <-as.directed(ga , mode = "arbitrary")
plot(gau)
gau <-as.directed(ga , mode = "each")
plot(gau)
degree(gau)
as.di
gau <-as.undirected(ga , mode = "each")
plot(gau)
gau <-as.undirected(ga)
plot(gau)
gau <-as.undirected(ga,mode = "arbitrary")
gau <-as.undirected(ga,mode = "mutual")
plot(gau)
gau <-as.undirected(ga,mode = "arbitrary")
?as.undirected
gau <-as.undirected(ga,mode = "arbitrary")
ga <-graph_from_adjacency_matrix(total, mode="directed")
plot(ga)
degree(gau)
ga <-graph_from_adjacency_matrix(total, mode="directed")
plot(ga)
gau <-as.undirected(ga)
plot(gau)
degree(gau)
library(igraph)
library(optrees)
ME = c(0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
NH = c(0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0)
VT = c(0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0)
MA = c(0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0)
RI = c(0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0)
CT = c(0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0)
NY = c(0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0)
NJ = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0)
DE = c(0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0)
PA = c(0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1)
MD = c(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0)
WV = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1)
OH = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0)
total = rbind(ME,NH,VT,MA,RI,CT,NY,NJ,DE,PA,MD,WV,OH)
ga <-graph_from_adjacency_matrix(total, mode="directed")
plot(ga)
degree(gau)
gau <-as.directed(ga)
plot(gau)
degree(gau)
closeness(gau)
betweenness(gau,directed=TRUE)
t2 <- mst(gau)
t2
plot(t2)
?mst
plot(T2)
Atl = c(0, 0, 7, 0, 8, 0, 8.5, 0)
Bos = c(0, 0, 9.8, 0, 0, 0, 2, 0)
Chi = c(7, 9.8, 0, 10, 9.7, 0, 8, 0)
Den = c(14, 0, 10, 0, 8, 10, 0, 12)
Dal = c(8, 0, 9.7, 8, 0, 14, 0, 17)
LA = c(0, 0, 0, 10, 14, 0, 0, 4)
NY = c(8.5, 2, 8, 0, 0, 0, 0, 0)
SF = c(0, 0, 0, 12, 17, 4, 0, 0)
MA = rbind(Atl,Bos,Chi,Den,Dal,LA,NY,SF)
ga<-graph_from_adjacency_matrix(MA)
plot(ga)
gau<-as.undirected(ga)
plot(gau)
gau
plot(gau)
